#!/usr/bin/python

import glob
import os
import re
import shutil
import sys
import tempfile


def read_file(file_path):
    f = open(file_path, 'r')
    contents = f.read()
    f.close()
    return contents

def write_file(file_path, contents):
    f = open(file_path, 'w')
    f.write(contents)
    f.close()

def construct_io_image_filename(process):
    return 'cat-user-disk-%s.raw' % (format_process_number(process))

def create_io_image(config_filename):
    serial_number = re.search(r'(\d+)', config_filename).group(1)
    image_filename = 'cat-user-disk-%s.raw' % (serial_number)

    config_contents = read_file(config_filename)

    if contents_to_filename.has_key(config_contents):
        print 'Linking from "%s" -> "%s"' % (contents_to_filename[config_contents], image_filename)
        os.symlink(contents_to_filename[config_contents], image_filename)

    else:
        image_directory = tempfile.mkdtemp()

        shutil.copy(os.path.join(svn_dir, 'run-job'), image_directory)

        input_directory = os.path.join(image_directory, 'input')
        os.mkdir(input_directory)
        # shutil.copy('/home/cat/ca/osg-test-cert-bundle.tar.bz2', input_directory)
        shutil.copy(os.path.join(svn_dir, 'osg-test.patch'), input_directory)
        shutil.copy(os.path.join(svn_dir, 'test-changes.patch'), input_directory)
        shutil.copy(os.path.join(svn_dir, 'osg-release.patch'), input_directory)
        shutil.copy(config_filename, os.path.join(input_directory, 'osg-test.conf'))
        for rpm in glob.glob(os.path.join(svn_dir, 'osg-test-*.rpm')):
            shutil.copy(rpm, input_directory)

        os.mkdir(os.path.join(image_directory, 'output'))

        print 'Making "%s" from "%s"' % (image_filename, image_directory)
        os.system('virt-make-fs --size=1.5M %s %s > /dev/null 2>&1' % (image_directory, image_filename))
        shutil.rmtree(image_directory)

        contents_to_filename[config_contents] = image_filename


# ------------------------------------------------------------------------------
# MAIN
# ------------------------------------------------------------------------------

if __name__ == '__main__':

    # Define paths
    svn_dir = '/home/cat/vm-test-runs'
    script_name = os.path.basename(sys.argv[0])

    # Process command-line arguments
    if len(sys.argv) != 1:
        die('usage: %s' % (script_name))

    # Write files
    contents_to_filename = {}
    for config_file in sorted(glob.glob('osg-test-*.conf')):
        create_io_image(config_file)
