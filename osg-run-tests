#!/bin/sh

safe_run()
{
    "$@"
    exit_status=$?
    if [[ $exit_status -ne 0 ]]; then
        echo "==> FAILED with exit status $exit_status"
        exit $exit_status
    fi
}

SKIP=0
LABEL=''

# Submit DAG (or print and skip)
while getopts :l:sh opt; do
    case $opt in
        s)
            SKIP=1
            ;;
        l)
            LABEL=$OPTARG
            ;;
        h)
            echo "usage: $0 <option>"
            echo "Options:"
            echo "    -s"
            echo "       Do not automatically submit DAG. Allows for patching before jobs are submitted."
            echo "    -l <description>"
            echo "       Assign a description to the test run. Used to create report web page."
            echo '    -h, -help, --help'
            echo "       Print this dialogue"
            exit 0
            ;;
        \?)
            echo "Invalid option: -$OPTARG" 
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument." 
            exit 1
            ;;
    esac
done

TEST_HOME=/osgtest/runs
if [[ ! -d $TEST_HOME ]]; then
    safe_run mkdir -p $TEST_HOME
fi

RUN_DIR_NAME=`date '+run-%Y%m%d-%H%M'`
RUN_DIRECTORY=$TEST_HOME/$RUN_DIR_NAME
echo "Run directory: $RUN_DIRECTORY"

# Make the new run directory
safe_run mkdir $RUN_DIRECTORY

# Check out files to a temporary directory
TEMP_DIR=`mktemp --directory`
SVN_CHECKOUT_DIR=$TEMP_DIR/svn-files
safe_run svn export https://vdt.cs.wisc.edu/svn/new-test/trunk/vm-test-runs $SVN_CHECKOUT_DIR --quiet

# Copy needed files to the run directory
cd $SVN_CHECKOUT_DIR
safe_run cp \
    master-run.dag \
    generate-dag.sub generate-dag test-parameters.yaml \
    create-io-images.sub create-io-images \
    run-job osg-test.patch test-changes.patch osg-release.patch single-test-run.sub inner-dag.config \
    process-job-output extract-job-output analyze-job-output \
    combine-job-analyses analyze-test-run.sub analyze-test-run email-analysis \
    report-job-failures report-job-failures.sub \
    vmu-reporter vmu-reporter.sub taglib.py \
    upload-job-output upload-job-output.sub \
    $RUN_DIRECTORY/
cp /osgtest/rpms/osg-test-*.rpm $RUN_DIRECTORY/ 2> /dev/null
cd $RUN_DIRECTORY
if [ "x$TEMP_DIR" != 'x' ]; then
    rm -fr "$TEMP_DIR"
fi

if [[ -z $LABEL ]]; then
    # User has not specified a description for this run
    touch $RUN_DIRECTORY/run_label
elif [[ $LABEL != "nightly" ]]; then
    # If it's a manual run, record the user
    echo "$LABEL ($USER)" > $RUN_DIRECTORY/run_label
else
    echo "$LABEL" > $RUN_DIRECTORY/run_label
fi

if [ $SKIP -eq 1 ]; then
    echo 'Run tests with:'
    echo "    cd $RUN_DIRECTORY"
    echo '    condor_submit_dag master-run.dag'
    exit 0
else
    condor_submit_dag master-run.dag
fi
